# Avalon Game Configuration with Agent Players
# This example shows how to configure a game with mixed human and LLM agent players
#
# SETUP:
# 1. Get a Gemini API key from https://aistudio.google.com/apikey
# 2. Set environment variable: export GEMINI_API_KEY="your-key-here"
# 3. Run: poetry run python -m avalon.interaction --config config-agents.yaml

# Player Configuration
# Two formats supported:
# 1. Simple string format: "Alice" - defaults to human player
# 2. Structured dict format: {name: "Alice", type: "agent"} - specify player type
#
# Player types:
#   - human: Human player (prompted for decisions via CLI)
#   - agent:  LLM agent player (uses Gemini API for decisions)

players:
  # Human players (simple format)
  - Alice
  - Bob
  
  # Agent players (structured format with type)
  - name: AgentCarol
    type: agent
  - name: AgentDave
    type: agent
  - name: AgentEve
    type: agent

# Optional Special Roles
# Available: percival, morgana, mordred, oberon
# Merlin and Assassin are always included
# Remaining slots filled with generic loyal_servant and minion_of_mordred
optional_roles:
  - percival
  - morgana

# Briefing Delivery Configuration
briefing:
  # Mode: 'sequential' (one at a time) or 'batch' (all at once)
  mode: sequential
  
  # Pause settings for sequential mode
  pause_before_each: false  # Wait before showing each briefing
  pause_after_each: false   # Wait after showing each briefing

# Optional: Fixed random seed for deterministic role assignment (useful for testing)
random_seed: 42

# Agent Behavior Notes:
# - Agents receive filtered game state based on their role knowledge
# - Agents display reasoning for transparency
# - Failed agent decisions fall back to human input
# - All agent decisions are logged in the transcript
